lapply(f_ageadj_stack, function(astack) astack %>% filter(gender == "Female") %>% mutate(plateau = ifelse(year <= 2015, "Decline", "Non-Decline")) %>% ggplot(aes(x=year, y=ageadj_excess, color = plateau)) + geom_point(size = 3) + geom_line(size = 0.85, color = "grey65") + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 2016, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks = c(2000, 2010, 2020), labels = c(2000, 2010, 2020)) + theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR") + xlab("") + theme(panel.grid = element_blank()) + xlab("") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) + ggtitle(unique(astack$name)) + theme(plot.title = element_text(hjust = 0.5, size = 12)))
library(tidyverse)
ageadj_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (23).txt" %>% read_delim(., delim='\t') %>% slice(1:(1675-91))
ageadj <- ageadj_file %>% select(Year, `ICD-10 113 Cause List`, Race, Gender, Deaths, Population, `Age Adjusted Rate`) %>% magrittr::set_colnames(c("year", "icd", "race", "gender", "deaths", "population", "ageadjrate"))
#NA year is 2020
ageadj <- ageadj %>% mutate(year = ifelse(is.na(year), 2020, year))
ageadj <- ageadj %>% mutate(race = ifelse(race == "White", "white", "black"))
ageadj <- ageadj %>% group_by(year, icd, gender) %>% summarize(unadj_excess_num = deaths[race=="black"] - (population[race=="black"] * (deaths[race=="white"]/population[race=="black"])), ageadj_excess = ageadjrate[race=="black"] - ageadjrate[race=="white"]) %>% ungroup()
icd_map <- ageadj %>% select(icd) %>% distinct() %>% mutate(name=c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular Diseases", "Perinatal Period Conditions", "Chronic Liver Disease and Cirrhosis", "Chronic Lower Respiratory Diseases", "Diabetes", "Heart Disease", "Hypertension", "HIV", "Influenza and Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to Solids/Liquids", "Septicemia"))
#top causes of death ageadj
ageadj <- ageadj %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
#overall ageadj
net_excess_ageadj <- "~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
######### PLOTTING and ANALYSIS #######################
overall_ageadj_changes <- net_excess_ageadj %>% group_by(gender, year) %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change_mag = ((abs(excess_deaths_rate - lag(excess_deaths_rate))) / abs(lag(excess_deaths_rate))) * 100, direction = sign(excess_deaths_rate - lag(excess_deaths_rate)), change = excess_deaths_rate - lag(excess_deaths_rate), pct_yoy_change = pct_yoy_change_mag * direction) %>% ungroup()
#overall change by year and excess deaths rate each year
overall_ageadj_changes %>% select(race, gender, year, excess_deaths_rate) %>% ggplot(aes(x=year, y=excess_deaths_rate, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes %>% select(race, gender, year, change) %>% ggplot(aes(x=year, y=change, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes %>% select(race, gender, year, change) %>% filter(gender == "Male") %>% mutate(color = ifelse(year <= 2011, "green", "blue")) %>% ggplot(aes(x = factor(year), y = change, fill = color)) + geom_bar(stat = "identity", show.legend = FALSE) + scale_fill_manual(values = c("green", "blue")) + scale_x_discrete(breaks = c(2000:2011, 2012:2020)) + theme_minimal() + labs(x = "Year", y = "Change")
#what pct of ageadj deaths excess are captured in the top causes of death yoy
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_deaths_rate)) %>% pull(pct_captured)
#what's driving the decline
df <- ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change_mag = ((abs(ageadj_excess - lag(ageadj_excess))) / abs(lag(ageadj_excess))) * 100, direction = sign(ageadj_excess - lag(ageadj_excess)), change = ageadj_excess - lag(ageadj_excess), pct_yoy_change = pct_yoy_change_mag * direction) %>% ungroup()
df <- df %>% select(year, gender, change, name) %>% left_join(overall_ageadj_changes %>% select(gender, year, change) %>% magrittr::set_colnames(c("gender", "year", "ovr_change"))) %>% filter(year > 1999)
#the remaining 15% AAMR that is not accounted for by top causes of death
tail_change <- df %>% group_by(year, gender) %>% summarize(nc = sum(change), t = unique(ovr_change)) %>% ungroup() %>% mutate(Tail = t - nc) %>% select(year, gender, Tail) %>% mutate(name = "Tail") %>% magrittr::set_colnames(c("year", "gender", "change", "name"))
df <- df %>% select(-ovr_change) %>% rbind(tail_change)
#change for each condition to get to excess AAMR for year
#can figure out what is driving the decline
#can create a figure saying for the decline period, what is the rank of the condition e.g. cancer across years
#can i use this to figure out what is driving the plateau??? I'm not sold I can.
cowplot::plot_grid(plotlist = lapply(dfstack, function(dfs) dfs %>% ggplot(aes(x = factor(name, levels = (dfs %>% arrange(change) %>% pull(name))), y = change)) + geom_bar(stat = "identity", show.legend = FALSE) + theme_minimal() + ylab("Change") + xlab("") + coord_flip() + facet_wrap(~year, scales="free") ), ncol = 1)
#FIGURE TO DO::
### NEED TO FIX COLOR SCHEME
### FIGURE 2
### Figure 1
name_map <- data.frame(name = ageadj %>% pull(name) %>% unique(), new_name = c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular\nDiseases", "Perinatal Period\nConditions", "Chronic Liver\nDisease and Cirrhosis", "Chronic Lower\nRespiratory Diseases", "Diabetes", "Heart Diease", "Hypertension", "HIV", "Influenza\nand Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to\nSolids and Liquids", "Septicemia")) %>% as_tibble()
ageadj <- ageadj %>% left_join(name_map, by=c("name"="name")) %>% select(-name) %>% magrittr::set_colnames(c("year", "gender", "unadj_excess_num", "ageadj_excess", "name"))
## Panel A: overall excess age adjusted
overall_ageadj_changes %>% select(race, gender, year, change) %>% ggplot(aes(x=year, y=change, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes <- overall_ageadj_changes %>% mutate(plateau_F = ifelse(gender == "Female", ifelse(year > 2015, "Non-decline", "Decline"), "Decline")) %>% mutate(plateau_M = ifelse(gender == "Male", ifelse(year > 2014, "Non-decline", "Decline"), "Decline")) %>% mutate(plateau = ifelse(gender == "Male", plateau_M, plateau_F))
cpal <- c("#374e55", "#df8f44")
fig1a <- overall_ageadj_changes %>% ggplot(aes(x=year, y=excess_deaths_rate, shape=gender)) + geom_line(size = 0.75, color = "grey70") + geom_point(size = 3.25, aes(color = plateau)) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent")) + scale_y_continuous(breaks = seq(-100, 450, 50), labels = seq(-100, 450, 50), limits = c(-100, 450)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70", linewidth = 0.65) + scale_x_continuous(breaks=seq(1999, 2020, 1), labels= function(x) ifelse(x %% 2 == 1, x, "")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR per\n100,000 Individuals") + xlab("Year") + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9)) + ggtitle("Excess Age-Adjusted Mortality Rates") + theme(plot.title = element_text(hjust = 0.5, size = 15))  + theme(panel.grid = element_blank()) + geom_vline(xintercept = 2015, color = "grey80", linetype = "dashed", linewidth = 0.35) + geom_vline(xintercept = 2016, color = "grey80", linetype = "dashed", linewidth = 0.35) + scale_color_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline", "Non-decline" = "Non-Decline"))
#may need to throw out 2020 becaue so high
fig1b <- overall_ageadj_changes %>% filter(gender == "Male") %>% mutate(color = ifelse(year <= 2014, "Decline", "Non-Decline")) %>% ggplot(aes(x = year, y = change, fill = color)) + geom_bar(stat = "identity") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70", linewidth = 0.65) + scale_x_continuous(breaks=seq(2000, 2020, 1), labels= function(x) ifelse(x %% 2 == 0, x, "")) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid.major.x = element_blank(), panel.grid.minor.y = element_blank()) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR\nChange") + xlab("Year") + theme(legend.title = element_blank(), legend.text = element_text(size = 10)) + ggtitle("Yearly Excess AAMR Change for Males") + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(panel.grid = element_blank()) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9))
#copy of 1b but switch to female gender and year of decline is 2015
fig1c <- overall_ageadj_changes %>% filter(gender == "Female") %>% mutate(color = ifelse(year <= 2015, "Decline", "Non-Decline")) %>% ggplot(aes(x = year, y = change, fill = color)) + geom_bar(stat = "identity") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks=seq(2000, 2020, 1), labels= function(x) ifelse(x %% 2 == 0, x, "")) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid.major.x = element_blank(), panel.grid.minor.y = element_blank()) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR\nChange") + xlab("Year")  + theme(legend.title = element_blank(), legend.text = element_text(size = 10)) + ggtitle("Yearly Excess AAMR Change for Females") + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(panel.grid = element_blank()) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9))
library(cowplot)
#top half of figure 1
right_half_fig1 <- cowplot::plot_grid(fig1b, fig1c, nrow = 2, ncol = 1, labels = c("B", "C"), label_size = 20)
top_half_fig1 <- plot_grid(fig1a, right_half_fig1, nrow = 1, labels = c("A", ""), label_size = 20)
#lineplot figure panels
order.of.conditions <- ageadj %>% group_by(name) %>% summarize(x = mean(ageadj_excess)) %>% arrange(desc(x)) %>% pull(name)
#copy for females and figure 1 done
#adds in the tail variabls
#ageadj <- rbind(ageadj %>% select(year, gender, ageadj_excess, name), ageadj %>% select(year, gender, ageadj_excess, name) %>% left_join(overall_ageadj_changes %>% select(gender, year, excess_deaths_rate), by=c("gender"="gender", "year"="year")) %>% group_by(year, gender) %>% summarize(nc = sum(ageadj_excess), t = unique(excess_deaths_rate)) %>% ungroup() %>% mutate(Tail = t - nc) %>% select(year, gender, Tail) %>% mutate(name = "Tail") %>% magrittr::set_colnames(c("year", "gender", "ageadj_excess", "name")))
m_ageadj_stack <- ageadj %>% filter(gender == "Male") %>% mutate(name = factor(name, levels = order.of.conditions)) %>% group_by(name) %>% group_split()
m_pltagestack <- lapply(m_ageadj_stack, function(astack) astack %>% filter(gender == "Male") %>% mutate(plateau = ifelse(year <= 2014, "Decline", "Non-Decline")) %>% ggplot(aes(x=year, y=ageadj_excess, color = plateau)) + geom_point(size = 3) + geom_line(size = 0.85, color = "grey65") + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 2015, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks = c(2000, 2010, 2020), labels = c(2000, 2010, 2020)) + theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR") + xlab("") + theme(panel.grid = element_blank()) + xlab("") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) + ggtitle(unique(astack$name)) + theme(plot.title = element_text(hjust = 0.5, size = 14))) + scale_color_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2]))
fig1d <- cowplot::plot_grid(plotlist = m_pltagestack, nrow = 6, ncol = 3)
f_ageadj_stack <- ageadj %>% filter(gender == "Female") %>% mutate(name = factor(name, levels = order.of.conditions)) %>% group_by(name) %>% group_split()
f_pltagestack <- lapply(f_ageadj_stack, function(astack) astack %>% filter(gender == "Female") %>% mutate(plateau = ifelse(year <= 2015, "Decline", "Non-Decline")) %>% ggplot(aes(x=year, y=ageadj_excess, color = plateau)) + geom_point(size = 3) + geom_line(size = 0.85, color = "grey65") + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 2016, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks = c(2000, 2010, 2020), labels = c(2000, 2010, 2020)) + theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR") + xlab("") + theme(panel.grid = element_blank()) + xlab("") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) + ggtitle(unique(astack$name)) + theme(plot.title = element_text(hjust = 0.5, size = 14))) + scale_color_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2]))
fig1e <- cowplot::plot_grid(plotlist = f_pltagestack, nrow = 6, ncol = 3)
fig1d_new <- plot_grid(ggplot() + theme_void() + ggtitle("Excess AAMR by Top Causes of Death for Males") + theme(plot.title = element_text(hjust = 0.5, size = 14)), fig1d, nrow = 2, rel_heights = c(0.02, 1))
fig1e_new <- plot_grid(ggplot() + theme_void() + ggtitle("Excess AAMR by Top Causes of Death for Females") + theme(plot.title = element_text(hjust = 0.5, size = 14)), fig1e, nrow = 2, rel_heights = c(0.02, 1))
bottom_half_fig1 <- plot_grid(fig1d_new, ggplot() + theme_void(), fig1e_new, nrow = 1, rel_widths = c(1, 0.1, 1), labels = c("D", "E"), label_size = 20)
plot_grid(top_half_fig1, bottom_half_fig1, nrow = 2, ncol = 1, rel_heights = c(0.3, 1)) %>% ggsave(filename = "~/Desktop/decline-fig1.pdf", plot = ., device = cairo_pdf, height = 20, width = 14, units = "in")
ageadj
ageadj %>% pull(name) %>% unique()
length(f_pltagestack)
f_pltagestack
library(tidyverse)
ageadj_file <- "~/Downloads/Underlying Cause of Death, 1999-2020 (23).txt" %>% read_delim(., delim='\t') %>% slice(1:(1675-91))
ageadj <- ageadj_file %>% select(Year, `ICD-10 113 Cause List`, Race, Gender, Deaths, Population, `Age Adjusted Rate`) %>% magrittr::set_colnames(c("year", "icd", "race", "gender", "deaths", "population", "ageadjrate"))
#NA year is 2020
ageadj <- ageadj %>% mutate(year = ifelse(is.na(year), 2020, year))
ageadj <- ageadj %>% mutate(race = ifelse(race == "White", "white", "black"))
ageadj <- ageadj %>% group_by(year, icd, gender) %>% summarize(unadj_excess_num = deaths[race=="black"] - (population[race=="black"] * (deaths[race=="white"]/population[race=="black"])), ageadj_excess = ageadjrate[race=="black"] - ageadjrate[race=="white"]) %>% ungroup()
icd_map <- ageadj %>% select(icd) %>% distinct() %>% mutate(name=c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular Diseases", "Perinatal Period Conditions", "Chronic Liver Disease and Cirrhosis", "Chronic Lower Respiratory Diseases", "Diabetes", "Heart Disease", "Hypertension", "HIV", "Influenza and Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to Solids/Liquids", "Septicemia"))
#top causes of death ageadj
ageadj <- ageadj %>% left_join(icd_map, by=c("icd"="icd")) %>% select(-icd)
#overall ageadj
net_excess_ageadj <- "~/Downloads/Figure1/age_adj_excess_mortality_rate_by_years_Figure1.csv" %>% read_csv()
######### PLOTTING and ANALYSIS #######################
overall_ageadj_changes <- net_excess_ageadj %>% group_by(gender, year) %>% group_by(gender) %>% arrange(year) %>% mutate(pct_yoy_change_mag = ((abs(excess_deaths_rate - lag(excess_deaths_rate))) / abs(lag(excess_deaths_rate))) * 100, direction = sign(excess_deaths_rate - lag(excess_deaths_rate)), change = excess_deaths_rate - lag(excess_deaths_rate), pct_yoy_change = pct_yoy_change_mag * direction) %>% ungroup()
#overall change by year and excess deaths rate each year
overall_ageadj_changes %>% select(race, gender, year, excess_deaths_rate) %>% ggplot(aes(x=year, y=excess_deaths_rate, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes %>% select(race, gender, year, change) %>% ggplot(aes(x=year, y=change, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes %>% select(race, gender, year, change) %>% filter(gender == "Male") %>% mutate(color = ifelse(year <= 2011, "green", "blue")) %>% ggplot(aes(x = factor(year), y = change, fill = color)) + geom_bar(stat = "identity", show.legend = FALSE) + scale_fill_manual(values = c("green", "blue")) + scale_x_discrete(breaks = c(2000:2011, 2012:2020)) + theme_minimal() + labs(x = "Year", y = "Change")
#what pct of ageadj deaths excess are captured in the top causes of death yoy
ageadj %>% group_by(year, gender) %>% summarize(net = sum(ageadj_excess)) %>% ungroup() %>% left_join(net_excess_ageadj, by=c("gender"="gender", "year"="year")) %>% mutate(pct_captured = round((net*100) / excess_deaths_rate)) %>% pull(pct_captured)
#what's driving the decline
df <- ageadj %>% group_by(gender, name) %>% arrange(year) %>% mutate(pct_yoy_change_mag = ((abs(ageadj_excess - lag(ageadj_excess))) / abs(lag(ageadj_excess))) * 100, direction = sign(ageadj_excess - lag(ageadj_excess)), change = ageadj_excess - lag(ageadj_excess), pct_yoy_change = pct_yoy_change_mag * direction) %>% ungroup()
df <- df %>% select(year, gender, change, name) %>% left_join(overall_ageadj_changes %>% select(gender, year, change) %>% magrittr::set_colnames(c("gender", "year", "ovr_change"))) %>% filter(year > 1999)
#the remaining 15% AAMR that is not accounted for by top causes of death
tail_change <- df %>% group_by(year, gender) %>% summarize(nc = sum(change), t = unique(ovr_change)) %>% ungroup() %>% mutate(Tail = t - nc) %>% select(year, gender, Tail) %>% mutate(name = "Tail") %>% magrittr::set_colnames(c("year", "gender", "change", "name"))
df <- df %>% select(-ovr_change) %>% rbind(tail_change)
#change for each condition to get to excess AAMR for year
#can figure out what is driving the decline
#can create a figure saying for the decline period, what is the rank of the condition e.g. cancer across years
#can i use this to figure out what is driving the plateau??? I'm not sold I can.
cowplot::plot_grid(plotlist = lapply(dfstack, function(dfs) dfs %>% ggplot(aes(x = factor(name, levels = (dfs %>% arrange(change) %>% pull(name))), y = change)) + geom_bar(stat = "identity", show.legend = FALSE) + theme_minimal() + ylab("Change") + xlab("") + coord_flip() + facet_wrap(~year, scales="free") ), ncol = 1)
#FIGURE TO DO::
### NEED TO FIX COLOR SCHEME
### FIGURE 2
### Figure 1
name_map <- data.frame(name = ageadj %>% pull(name) %>% unique(), new_name = c("Accidents", "Alzheimer's", "Assault", "Cerebrovascular\nDiseases", "Perinatal Period\nConditions", "Chronic Liver\nDisease and Cirrhosis", "Chronic Lower\nRespiratory Diseases", "Diabetes", "Heart Diease", "Hypertension", "HIV", "Influenza\nand Pneumonia", "Suicide", "Cancer", "Nephritis", "Parkinson's", "Pneumonitis due to\nSolids and Liquids", "Septicemia")) %>% as_tibble()
ageadj <- ageadj %>% left_join(name_map, by=c("name"="name")) %>% select(-name) %>% magrittr::set_colnames(c("year", "gender", "unadj_excess_num", "ageadj_excess", "name"))
## Panel A: overall excess age adjusted
overall_ageadj_changes %>% select(race, gender, year, change) %>% ggplot(aes(x=year, y=change, color=race)) + geom_line() + geom_point() + theme_minimal() + facet_wrap(~gender)
overall_ageadj_changes <- overall_ageadj_changes %>% mutate(plateau_F = ifelse(gender == "Female", ifelse(year > 2015, "Non-decline", "Decline"), "Decline")) %>% mutate(plateau_M = ifelse(gender == "Male", ifelse(year > 2014, "Non-decline", "Decline"), "Decline")) %>% mutate(plateau = ifelse(gender == "Male", plateau_M, plateau_F))
cpal <- c("#374e55", "#df8f44")
fig1a <- overall_ageadj_changes %>% ggplot(aes(x=year, y=excess_deaths_rate, shape=gender)) + geom_line(size = 0.75, color = "grey70") + geom_point(size = 3.25, aes(color = plateau)) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent")) + scale_y_continuous(breaks = seq(-100, 450, 50), labels = seq(-100, 450, 50), limits = c(-100, 450)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70", linewidth = 0.65) + scale_x_continuous(breaks=seq(1999, 2020, 1), labels= function(x) ifelse(x %% 2 == 1, x, "")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR per\n100,000 Individuals") + xlab("Year") + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9)) + ggtitle("Excess Age-Adjusted Mortality Rates") + theme(plot.title = element_text(hjust = 0.5, size = 15))  + theme(panel.grid = element_blank()) + geom_vline(xintercept = 2015, color = "grey80", linetype = "dashed", linewidth = 0.35) + geom_vline(xintercept = 2016, color = "grey80", linetype = "dashed", linewidth = 0.35) + scale_color_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline", "Non-decline" = "Non-Decline"))
#may need to throw out 2020 becaue so high
fig1b <- overall_ageadj_changes %>% filter(gender == "Male") %>% mutate(color = ifelse(year <= 2014, "Decline", "Non-Decline")) %>% ggplot(aes(x = year, y = change, fill = color)) + geom_bar(stat = "identity") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70", linewidth = 0.65) + scale_x_continuous(breaks=seq(2000, 2020, 1), labels= function(x) ifelse(x %% 2 == 0, x, "")) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid.major.x = element_blank(), panel.grid.minor.y = element_blank()) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR\nChange") + xlab("Year") + theme(legend.title = element_blank(), legend.text = element_text(size = 10)) + ggtitle("Yearly Excess AAMR Change for Males") + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(panel.grid = element_blank()) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9))
#copy of 1b but switch to female gender and year of decline is 2015
fig1c <- overall_ageadj_changes %>% filter(gender == "Female") %>% mutate(color = ifelse(year <= 2015, "Decline", "Non-Decline")) %>% ggplot(aes(x = year, y = change, fill = color)) + geom_bar(stat = "identity") + theme_minimal() + scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) + geom_hline(yintercept = 0, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks=seq(2000, 2020, 1), labels= function(x) ifelse(x %% 2 == 0, x, "")) + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid.major.x = element_blank(), panel.grid.minor.y = element_blank()) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR\nChange") + xlab("Year")  + theme(legend.title = element_blank(), legend.text = element_text(size = 10)) + ggtitle("Yearly Excess AAMR Change for Females") + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(plot.title = element_text(hjust = 0.5, size = 14)) + theme(panel.grid = element_blank()) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) + theme(legend.title = element_blank(), legend.text = element_text(size = 12), axis.title = element_text(size = 12), axis.text = element_text(size = 9))
library(cowplot)
#top half of figure 1
right_half_fig1 <- cowplot::plot_grid(fig1b, fig1c, nrow = 2, ncol = 1, labels = c("B", "C"), label_size = 20)
top_half_fig1 <- plot_grid(fig1a, right_half_fig1, nrow = 1, labels = c("A", ""), label_size = 20)
order.of.conditions <- ageadj %>% group_by(name) %>% summarize(x = mean(ageadj_excess)) %>% arrange(desc(x)) %>% pull(name)
#copy for females and figure 1 done
#adds in the tail variabls
#ageadj <- rbind(ageadj %>% select(year, gender, ageadj_excess, name), ageadj %>% select(year, gender, ageadj_excess, name) %>% left_join(overall_ageadj_changes %>% select(gender, year, excess_deaths_rate), by=c("gender"="gender", "year"="year")) %>% group_by(year, gender) %>% summarize(nc = sum(ageadj_excess), t = unique(excess_deaths_rate)) %>% ungroup() %>% mutate(Tail = t - nc) %>% select(year, gender, Tail) %>% mutate(name = "Tail") %>% magrittr::set_colnames(c("year", "gender", "ageadj_excess", "name")))
m_ageadj_stack <- ageadj %>% filter(gender == "Male") %>% mutate(name = factor(name, levels = order.of.conditions)) %>% group_by(name) %>% group_split()
m_pltagestack <- lapply(m_ageadj_stack, function(astack) astack %>% filter(gender == "Male") %>% mutate(plateau = ifelse(year <= 2014, "Decline", "Non-Decline")) %>% ggplot(aes(x=year, y=ageadj_excess, color = plateau)) + geom_point(size = 3) + geom_line(size = 0.85, color = "grey65") + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 2015, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks = c(2000, 2010, 2020), labels = c(2000, 2010, 2020)) + theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR") + xlab("") + theme(panel.grid = element_blank()) + xlab("") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) + ggtitle(unique(astack$name)) + theme(plot.title = element_text(hjust = 0.5, size = 14)) + scale_color_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) )
fig1d <- cowplot::plot_grid(plotlist = m_pltagestack, nrow = 6, ncol = 3)
f_ageadj_stack <- ageadj %>% filter(gender == "Female") %>% mutate(name = factor(name, levels = order.of.conditions)) %>% group_by(name) %>% group_split()
f_pltagestack <- lapply(f_ageadj_stack, function(astack) astack %>% filter(gender == "Female") %>% mutate(plateau = ifelse(year <= 2015, "Decline", "Non-Decline")) %>% ggplot(aes(x=year, y=ageadj_excess, color = plateau)) + geom_point(size = 3) + geom_line(size = 0.85, color = "grey65") + theme_minimal() + theme(legend.position = "none") + geom_vline(xintercept = 2016, linetype = "dashed", color = "grey70") + scale_x_continuous(breaks = c(2000, 2010, 2020), labels = c(2000, 2010, 2020)) + theme(axis.line.x = element_line(color = "black"), axis.line.y = element_line(color = "black")) + theme(axis.ticks = element_line(color = "black")) + ylab("Excess AAMR") + xlab("") + theme(panel.grid = element_blank()) + xlab("") + theme(axis.text = element_text(size = 10), axis.title = element_text(size = 10)) + ggtitle(unique(astack$name)) + theme(plot.title = element_text(hjust = 0.5, size = 14)) + scale_color_manual(values = c("Decline" = cpal[1], "Non-Decline" = cpal[2])) )
fig1e <- cowplot::plot_grid(plotlist = f_pltagestack, nrow = 6, ncol = 3)
fig1d_new <- plot_grid(ggplot() + theme_void() + ggtitle("Excess AAMR by Top Causes of Death for Males") + theme(plot.title = element_text(hjust = 0.5, size = 14)), fig1d, nrow = 2, rel_heights = c(0.02, 1))
fig1e_new <- plot_grid(ggplot() + theme_void() + ggtitle("Excess AAMR by Top Causes of Death for Females") + theme(plot.title = element_text(hjust = 0.5, size = 14)), fig1e, nrow = 2, rel_heights = c(0.02, 1))
bottom_half_fig1 <- plot_grid(fig1d_new, ggplot() + theme_void(), fig1e_new, nrow = 1, rel_widths = c(1, 0.1, 1), labels = c("D", "E"), label_size = 20)
plot_grid(top_half_fig1, bottom_half_fig1, nrow = 2, ncol = 1, rel_heights = c(0.3, 1)) %>% ggsave(filename = "~/Desktop/decline-fig1.pdf", plot = ., device = cairo_pdf, height = 20, width = 14, units = "in")
plot_grid(top_half_fig1, bottom_half_fig1, nrow = 2, ncol = 1, rel_heights = c(0.3, 1)) %>% ggsave(filename = "~/Desktop/decline-fig1.pdf", plot = ., device = cairo_pdf, height = 20, width = 15, units = "in")
avg_change <- rbind(ageadj %>% select(year, gender, ageadj_excess, name), ageadj %>% select(year, gender, ageadj_excess, name) %>% left_join(overall_ageadj_changes %>% select(gender, year, excess_deaths_rate), by=c("gender"="gender", "year"="year")) %>% group_by(year, gender) %>% summarize(nc = sum(ageadj_excess), t = unique(excess_deaths_rate)) %>% ungroup() %>% mutate(Tail = t - nc) %>% select(year, gender, Tail) %>% mutate(name = "Tail") %>% magrittr::set_colnames(c("year", "gender", "ageadj_excess", "name")))
get_lm_fits <- function(df){
slope <- coefficients(df %>% lm(ageadj_excess ~ year, .))[[2]]
ci <- (confint(df %>% lm(ageadj_excess ~ year, .), "year"))[1:2]
data.frame(slope = slope, lower = ci[1], upper = ci[2], gender = unique(df$gender), name = unique(df$name), plateau = unique(df$plateau))
}
m_avg_stack <- avg_change %>% filter(gender == "Male") %>% filter(year < 2020) %>% mutate(plateau = ifelse(year <= 2014, "Decline", "Non-decline")) %>% group_by(gender, plateau, name) %>% group_split()
m_avg_rate <- do.call(rbind, m_avg_stack %>% lapply(., function(df) get_lm_fits(df))) %>% as_tibble()
m_order.of.avg.names <- m_avg_rate %>% group_by(name) %>% summarize(diff = slope[plateau == "Decline"] - slope[plateau == "Non-decline"]) %>% arrange(diff) %>% pull(name) %>% rev()
m_avg_rate <- m_avg_rate %>% mutate(name = factor(name, levels = m_order.of.avg.names))
#bar plot version
#dot plot version
#avg_rate %>% ggplot( aes(x = name, y = slope, fill = plateau)) + geom_point(position = position_dodge(width = 0.5)) + labs(x = "Cause of Death", y = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(ymin = lower, ymax = upper), position = position_dodge(width = 0.5), width = 0.25) + theme_minimal()
f_avg_stack <- avg_change %>% filter(gender == "Female") %>% filter(year < 2020) %>% mutate(plateau = ifelse(year <= 2015, "Decline", "Non-decline")) %>% group_by(gender, plateau, name) %>% group_split()
f_avg_rate <- do.call(rbind, f_avg_stack %>% lapply(., function(df) get_lm_fits(df))) %>% as_tibble()
f_order.of.avg.names <- f_avg_rate %>% group_by(name) %>% summarize(diff = slope[plateau == "Decline"] - slope[plateau == "Non-decline"]) %>% arrange(diff) %>% pull(name) %>% rev()
f_avg_rate <- f_avg_rate %>% mutate(name = factor(name, levels = f_order.of.avg.names))
m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom")
m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12, axis.title = element_text(size = 14)))
m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14))
m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12))
fig2a <- m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12))
fig2b <- f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)")) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12))
fig2a
fig2b
fig2b + xlim(-5, 5)
fig2a <- m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)")) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2b <- f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)")) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2 <- plot_grid(fig2a, fig2b, nrow = 1, labels = c("A", "B"), label_size = 20)
fig2
f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2a <- m_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2b <- f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2 <- plot_grid(fig2a, fig2b, nrow = 1, labels = c("A", "B"), label_size = 20)
fig2
fig2 %>% ggsave(filename = "~/Desktop/decline-fig2.pdf", plot = ., device = cairo_pdf, height = 8, width = 15, units = "in")
m_avg_rate
fig2a <- m_avg_rate %>% mutate(name = ifelse(grepl("Perinatal", name), "Perinatal Period Conditions", name)) %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2b <- f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2 <- plot_grid(fig2a, fig2b, nrow = 1, labels = c("A", "B"), label_size = 20)
fig2 %>% ggsave(filename = "~/Desktop/decline-fig2.pdf", plot = ., device = cairo_pdf, height = 8, width = 15, units = "in")
m_avg_rate
m_avg_rate %>% mutate(name = ifelse(grepl("Perinatal", name), "yes", name))
fig2 %>% ggsave(filename = "~/Desktop/decline-fig2.pdf", plot = ., device = cairo_pdf, height = 10, width = 15, units = "in")
fig2a <- m_avg_rate  %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2014)", "Non-decline" = "Non-Decline (2015-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Males") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2b <- f_avg_rate %>% ggplot( aes(y = name, x = slope, fill = plateau)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.75) +
labs(y = "", x = "Average Change in Excess AAMR", fill = "") +   geom_errorbar(aes(xmin = lower, xmax = upper), position = position_dodge(width = 0.8), width = 0.2, color = "grey60", size = 0.55) +
theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + geom_vline(xintercept = 0, color = "grey30") + theme(panel.grid.major.y = element_line(color = "grey90", linetype = "dashed", linewidth = 0.5)) + scale_fill_manual(values = c("Decline" = cpal[1], "Non-decline" = cpal[2]), labels = c("Decline" = "Decline (1999-2015)", "Non-decline" = "Non-Decline (2016-2019)"), guide = guide_legend(nrow = 2)) + ggtitle("Females") + theme(plot.title = element_text(size = 14, hjust = 0.5)) + theme(legend.position = "bottom") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14), legend.text = element_text(size = 12)) + xlim(-5, 5)
fig2 <- plot_grid(fig2a, fig2b, nrow = 1, labels = c("A", "B"), label_size = 20)
fig2 %>% ggsave(filename = "~/Desktop/decline-fig2.pdf", plot = ., device = cairo_pdf, height = 10, width = 15, units = "in")
setwd("~/Documents/GitHub/lc-vi-ml/")
options <- c("predict-lc-vi.R", "lc-vi/merged.csv", "LC", "lc-vi", "TRUE")
library(tidyverse)
library(haven)
library(labelled)
library(broom)
library(caret)
library(gbm)
library(pROC)
library(scales)
library(xgboost)
set.seed(123)
papervarnames_file <- "lc-vi-paper-var-names.csv"
#matrix called "merged" with rows being patients and columns being symptoms
#one column called status that has the classification
merged <- read_csv(options[1])
#class1varname is the value of the class 1 as a character
class1_variablename <- options[2]
outdir <- options[3]
plots_only <- options[4]
if (!dir.exists(outdir)){
dir.create(outdir)
}
#k (number) fold ; p (repeat) repeat cv
cv_number <- 5
cv_repeat <- 5
results <- file.path(outdir, "results.rds") %>% readRDS(.)
results_gbm <- results$results_gbm
results_xgb_shap <- results$results_xgb_shap
results_xgb_gain <- results$results_xgb_gain
varimp_store_gbm <- results$varimp_store_gbm
varimp_store_xgb_gain <- results$varimp_store_xgb_gain
varimp_store_xgb_shap <- results$varimp_store_xgb_shap
phats_gbm <- results$phats_gbm
outdir
options <- c(lc-vi/merged.csv", "LC", "lc-vi", "TRUE")
options <- c("lc-vi/merged.csv", "LC", "lc-vi", "TRUE")
papervarnames_file <- "lc-vi-paper-var-names.csv"
#matrix called "merged" with rows being patients and columns being symptoms
#one column called status that has the classification
merged <- read_csv(options[1])
#class1varname is the value of the class 1 as a character
class1_variablename <- options[2]
outdir <- options[3]
plots_only <- options[4]
results <- file.path(outdir, "results.rds") %>% readRDS(.)
results_gbm <- results$results_gbm
results_xgb_shap <- results$results_xgb_shap
results_xgb_gain <- results$results_xgb_gain
varimp_store_gbm <- results$varimp_store_gbm
varimp_store_xgb_gain <- results$varimp_store_xgb_gain
varimp_store_xgb_shap <- results$varimp_store_xgb_shap
phats_gbm <- results$phats_gbm
phats_gbm
true_names <- papervarnames_file %>% read_csv() %>% select(2,3)
varimp_store_gbm <- lapply(varimp_store_gbm, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(Overall, proper_names, id, s) %>% magrittr::set_colnames(c("Overall", "var", "id", "s")))
varimp_store_xgb_gain <- lapply(varimp_store_xgb_gain, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(Overall, proper_names, id, s) %>% magrittr::set_colnames(c("Overall", "var", "id", "s")))
varimp_store_xgb_shap <- lapply(varimp_store_xgb_shap, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(mean_abs_shap, proper_names, id) %>% magrittr::set_colnames(c("mean_abs_shap", "var", "id")))
library(scales)
#PLOTTING
sx_varimp_plot <- function(df, method = "importance"){
cbb <- ggsci::pal_jama("default")(7)
if (length(unique(df$colstatus)) <= 1){
plt <- df %>% ggplot(aes(y=factor(id), x=s), color = "grey80", fill = "grey80") + geom_col() + theme_minimal() + theme(legend.position = "none")
} else{
plt <- df %>% ggplot(aes(y=factor(id), x=s, color=colstatus, fill = colstatus)) + geom_col() + theme_minimal() + scale_color_manual(name = "In Final Model", values = c("Yes" = cbb[1], "No" = cbb[2]), labels = c("No" = "No", "Yes" = "Yes")) + theme(legend.text = element_text(size = 12), legend.title = element_text(size = 12)) + scale_fill_manual(name = "In Final Model", values = c("Yes" = cbb[1], "No" = cbb[2]), labels = c("No" = "No", "Yes" = "Yes"))
}
if (method == "shap"){
xlabstr <- "Mean Absolute SHAP"
} else{
xlabstr <- "Percent Importance (%)"
}
plt	+ scale_y_discrete(breaks = df$id, labels = df$var) + xlab(xlabstr) + theme(panel.grid = element_blank()) + theme(panel.background  = element_blank(), panel.border = element_rect(color = "black", fill = "transparent")) +  scale_x_continuous(breaks = pretty_breaks(n = 10)) + ggtitle("") + theme(axis.title = element_text(hjust = 0.5, size = 12)) + theme(axis.text = element_text(size = 10), axis.ticks.x = element_line(color = "grey80"))
}
#relative change: >= 1.5% drop then call it
get_n_vars <- function(df){
df$diff <- c(0, diff(df$auc))
df <- df %>% mutate(percent_rel_change = (diff*100) / auc)
res <- df %>% mutate(idx = 1:n()) %>% filter(round(percent_rel_change, 4) <= -1.5) %>% mutate(nlim = ifelse(n.vars <= 20, 1, 0))
varn <- res %>% filter(nlim == 1) %>% dplyr::slice(1) %>% pull(idx)
if (identical(varn, integer(0))){
varn <- res$idx[1]
}
df$n.vars[(varn - 1)]
}
final.n.vars.gbm <- get_n_vars(results_gbm)
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(llim, 3), ")"))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(llim, 2), ")"))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")")) %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15))
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct()
mapping_calib
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct() %>% arrange(decile)
phat_figb <- calib %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15)) + scale_x_continuous(breaks = mapping_calib$decile, labels = mapping_calib$xlabel)
phat_figb
calib %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.title = element_text(size = 15)) + scale_x_continuous(breaks = mapping_calib$decile, labels = mapping_calib$xlabel)
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% colMeans()
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% colMeans()
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10))phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10))phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% select(-LC)
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_sx
decile_sx %>% select(decile, anxiety)
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_vec
decile_vec==10
decile_sx$anxiety[decile_vec==10]
wilcox.test(decile_sx$anxiety[decile_vec==10], decile_sx$anxiety[decile_vec==1])
calib_means
decile_means <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean))
decile_means
wilcox.test(decile_sx$anxiety[decile_vec==10], decile_sx$anxiety[decile_vec==1])
wilcox.test(decile_sx$anxiety[decile_vec==10], decile_sx$anxiety[decile_vec==1])$p.val
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_pvals <- apply(decile_sx %>% select(-decile), 2, function(x) wilcox.test(x[decile_vec == 10], x[decile_vec==1])$p.val) %>% unlist()
decile_pvals
decile_pvals %>% unname()
decile_pvals %>% as_tibble()
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames())
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% arrange(desc(value))
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% arrange(value)
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% arrange(value)
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% arrange(value) %>% as.data.frame()
decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
vars_less_than_0.05 <- decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
vars_less_than_0.05
vars_less_than_0.05 %>% pull(Var)
vars_less_than_0.05 %>% pull(var)
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% pivot_longer(-c(decile))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var))) %>% ggplot(aes(x=decile, y = value, color = name, fill  = name, group = name))
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var))) %>% ggplot(aes(x=decile, y = value, color = name, fill  = name, group = name)) + geom_col()
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var))) %>% ggplot(aes(x=decile, y = value, color = name, fill  = name, group = name)) + geom_bar(position = "dodge", stat = "identity")
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var))) %>% ggplot(aes(x=name, y = value, color = decile, fill  = decile, group = decile)) + geom_bar(position = "dodge", stat = "identity")
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity")
phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var))) %>% mutate(name = factor(name, levels = vars_less_than_0.05 %>% pull(var)))
calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10])
calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v))
calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v)) %>% pull(v)
calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v)) %>% pull(name)
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp %>% mutate(name = factor(name, levels = calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v)) %>% pull(name)) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal()
)
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() +
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange(desc(v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal()
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal()
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile")
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank())
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_blank()) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_colo_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 90)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 90, hjust = 0)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
true_names
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 90, hjust = 0)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 0)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "", fill = "") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c(1 = #df8f44", 10 = "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c(1 = #df8f44", 10 = "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c 1 = "#df8f44", 10 = "#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), breaks = c("1st", "10th")) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), breaks = c("1st", "10th")) + scale_color_manual(values = c("#df8f44", "#374e55"), breaks = c("1st", "10th")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st", "10th")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st", "10th")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
decile_means
decile_means %>% select(cough)
mapping_calib
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\n(P(LC) = 0.14 - 0.23)", "10th \nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th \nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name))))
calib_comp
true_names
calib_comp %>% left_join(true_names, by = c("name" = "new_names"))
calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(value, name, decile)
calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
calib_comp <- calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
calib_comp <- %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
phat_figa <- phat %>% select(LC, status) %>% arrange(LC) %>% mutate(idx = 1:n()) %>% ggplot(aes(x=idx, y=LC, color = status)) + geom_point(size = 2) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + ylab("Predicted Probability of Patient\nHaving Long Covid") + xlab("") + theme(axis.text.x = element_blank()) + theme(legend.position = "bottom") + labs(color = "Patient Status") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
#A calibration bar plot showing the observed % of LC vs PVS within each decile of predicted p_hat. And if possible, compare the symptoms between the ppl in the first and 10th deciles.
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
#first vs tenth decile comparison
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_pvals <- apply(decile_sx %>% select(-decile), 2, function(x) wilcox.test(x[decile_vec == 10], x[decile_vec==1])$p.val) %>% unlist()
vars_less_than_0.05 <- decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() +
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct() %>% arrange(decile)
phat_figb <- calib %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.title = element_text(size = 15)) + scale_x_continuous(breaks = mapping_calib$decile, labels = mapping_calib$xlabel)
calib_comp <- calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55"), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
#A histogram of everyone
phat_figc <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled..)) + geom_density(color = "grey40", fill = "grey70", adjust = 1, alpha = 0.8) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15))
#A histogram of p_hat for LC and PVS respectively on the same plot.
phat_figd <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled.., fill = status)) + geom_density(color = "grey40", adjust = 1, alpha = 0.75) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID", fill = "Patient\nStatus") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55"))
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, phat_fige, nrow = 3, ncol = 2, labels = "AUTO", label_size = 20)
phat_fig
phatfig
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20)
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 12, height = 20)
("#df8f44","#374e55") %>% rev()
c("#df8f44","#374e55") %>% rev()
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
phat_figa <- phat %>% select(LC, status) %>% arrange(LC) %>% mutate(idx = 1:n()) %>% ggplot(aes(x=idx, y=LC, color = status)) + geom_point(size = 2) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + ylab("Predicted Probability of Patient\nHaving Long Covid") + xlab("") + theme(axis.text.x = element_blank()) + theme(legend.position = "bottom") + labs(color = "Patient Status") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
#A calibration bar plot showing the observed % of LC vs PVS within each decile of predicted p_hat. And if possible, compare the symptoms between the ppl in the first and 10th deciles.
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
#first vs tenth decile comparison
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_pvals <- apply(decile_sx %>% select(-decile), 2, function(x) wilcox.test(x[decile_vec == 10], x[decile_vec==1])$p.val) %>% unlist()
vars_less_than_0.05 <- decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() +
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct() %>% arrange(decile)
phat_figb <- calib %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.title = element_text(size = 15)) + scale_x_continuous(breaks = mapping_calib$decile, labels = mapping_calib$xlabel)
calib_comp <- calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
#A histogram of everyone
phat_figc <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled..)) + geom_density(color = "grey40", fill = "grey70", adjust = 1, alpha = 0.8) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15))
#A histogram of p_hat for LC and PVS respectively on the same plot.
phat_figd <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled.., fill = status)) + geom_density(color = "grey40", adjust = 1, alpha = 0.75) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID", fill = "Patient\nStatus") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55"))
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20)
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 12, height = 20)
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 15, height = 20)
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 10, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
#A histogram of everyone
phat_figc <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled..)) + geom_density(color = "grey40", fill = "grey70", adjust = 1, alpha = 0.8) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15))
#A histogram of p_hat for LC and PVS respectively on the same plot.
phat_figd <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled.., fill = status)) + geom_density(color = "grey40", adjust = 1, alpha = 0.75) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID", fill = "Patient\nStatus") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55"))
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20)
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 16, height = 21)
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
phat_figa <- phat %>% select(LC, status) %>% arrange(LC) %>% mutate(idx = 1:n()) %>% ggplot(aes(x=idx, y=LC, color = status)) + geom_point(size = 2) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + ylab("Predicted Probability of Patient\nHaving Long Covid") + xlab("") + theme(axis.text.x = element_blank()) + theme(legend.position = "bottom") + labs(color = "Patient Status") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_color_manual(values = c("#df8f44", "#374e55")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1))
#A calibration bar plot showing the observed % of LC vs PVS within each decile of predicted p_hat. And if possible, compare the symptoms between the ppl in the first and 10th deciles.
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
#first vs tenth decile comparison
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_pvals <- apply(decile_sx %>% select(-decile), 2, function(x) wilcox.test(x[decile_vec == 10], x[decile_vec==1])$p.val) %>% unlist()
vars_less_than_0.05 <- decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal() +
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct() %>% arrange(decile)
phat_figb <- calib %>% mutate(pct_LC = round((s/n)*100, 2)) %>% ggplot(aes(x=decile, y = pct_LC)) + theme_minimal() + geom_col(fill = "grey50") + theme(panel.border = element_rect(color = "black", fill = "transparent")) + theme(panel.grid = element_blank()) + xlab("Deciles and Ranges of Predicted\nProbability of Having Long COVID") + ylab("Percent of Patients with\nLong COVID in Decile") + theme(axis.text.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.title = element_text(size = 15)) + scale_x_continuous(breaks = mapping_calib$decile, labels = mapping_calib$xlabel)
calib_comp <- calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 12, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
#A histogram of everyone
phat_figc <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled..)) + geom_density(color = "grey40", fill = "grey70", adjust = 1, alpha = 0.8) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15))
#A histogram of p_hat for LC and PVS respectively on the same plot.
phat_figd <- phat %>% select(LC, status) %>% ggplot(aes(x=LC, y = ..scaled.., fill = status)) + geom_density(color = "grey40", adjust = 1, alpha = 0.75) + theme_minimal() + theme(panel.border = element_rect(color = "black", fill = "transparent"))  + theme(panel.grid = element_blank()) + scale_x_continuous(limits = c(0,1), breaks = seq(0, 1, .25)) + labs(y = "Density", x = "Estimated Probability of Having Long COVID", fill = "Patient\nStatus") + theme(axis.text = element_text(size = 12), axis.title = element_text(size = 15), legend.text = element_text(size = 12), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44", "#374e55"))
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20, rel_widths = c(0.85, 1))
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 16, height = 21)
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20, rel_widths = c(0.8, 1))
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 16, height = 21)
phatfig <- cowplot::plot_grid(phat_figa, phat_figb, phat_figc, phat_figd, nrow = 2, ncol = 2, labels = "AUTO", label_size = 20, rel_widths = c(0.76, 1))
newphatfig <- cowplot::plot_grid(phatfig, phat_fige, nrow = 2, labels = c("", "E"), label_size = 20, rel_heights = c(1, 0.4))
ggsave(plot=newphatfig, filename="lc-vi/phat-fig.pdf", device = cairo_pdf, units = "in", width = 16.5, height = 21)
