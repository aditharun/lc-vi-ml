setwd("~/Documents/GitHub/lc-vi-ml/")
list.fileS()
library(tidyverse)
library(haven)
library(labelled)
library(broom)
library(caret)
library(gbm)
library(pROC)
library(scales)
library(xgboost)
set.seed(123)
papervarnames_file <- "lc-vi-paper-var-names.csv"
options <- c("../lc-vi-ml/lc-vi/merged.csv", "lc-vi", TRUE)
cv_number <- 5
cv_repeat <- 5
results <- file.path(outdir, "results.rds") %>% readRDS(.)
options <- c("../lc-vi-ml/lc-vi/merged.csv", "LC", "lc-vi", TRUE)
class1_variablename <- options[2]
outdir <- options[3]
plots_only <- options[4]
if (!dir.exists(outdir)){
dir.create(outdir)
}
#k (number) fold ; p (repeat) repeat cv
cv_number <- 5
cv_repeat <- 5
getPerformance <- function(model_seq, merged, class1varname){
fit <-
model_seq$pred %>%
arrange(rowIndex) %>%
group_by(rowIndex) %>%
dplyr::summarize(obs=obs[1],
prob=mean(!!sym(class1varname))) %>%
ungroup() %>% mutate(id = rowIndex) %>%
select(id, obs, prob)
dat <- fit %>% mutate(class = ifelse(obs == class1varname, 1, 0))
rocobj <- roc(dat$class, dat$prob, direction = "<", ci=TRUE)
df.roc <- data.frame(spec=rocobj$specificities, sens=rocobj$sensitivities)
lb <- rocobj$ci[1]
auc <- rocobj$ci[2]
ub <- rocobj$ci[3]
lab.text <- paste0("AUC: ", auc %>% signif(2), " (", lb %>% signif(2), " - ", ub %>% signif(2) , ")")
ann.text <- data.frame(spec=0.35, sens=0.25, label=lab.text, n=length(rocobj$cases))
overall.roc <- ggplot(df.roc, aes(spec, sens)) +
geom_line(size=1) +
scale_x_reverse(expand=c(0, 0.01),
breaks=c(0, 0.25, 0.5, 0.75, 1),
labels=as.character(
c("0", ".25", ".50", ".75", "1.0"))) +
scale_y_continuous(expand=c(0, 0.01),
labels=as.character(
c("0", ".25", ".50", ".75", "1.0")))  +
theme_classic(base_size=17) +
theme(panel.background=element_blank(),
panel.grid=element_blank(),
legend.position="top",          axis.line.x.bottom=element_line(color="black"),
strip.background=element_blank(),
aspect.ratio=0.95) +
xlab("Specificity") + ylab("Sensitivity") + geom_text(data = ann.text,label = lab.text, size=5)
list(roc_curve = overall.roc, auc = auc, lb = lb, ub = ub)
}
gbm_stats <- function(merged, response, class1varname, cv.number, cv.repeats){
tg_gbm <- expand.grid(n.trees=c(50, 100, 150),
interaction.depth=c(2,3,4),
shrinkage=0.1,
n.minobsinnode=10)
ctrl <- trainControl(method="repeatedcv",
number=cv.number,
repeats=cv.repeats,
verboseIter=TRUE,
savePredictions="final",
classProbs=TRUE,
index=createMultiFolds(merged$status, cv.number, cv.repeats),
summaryFunction=twoClassSummary)
model_seq_gbm <- caret::train(status ~ .,
data=merged,
method="gbm",
metric="ROC",
tuneGrid=tg_gbm,
trControl=ctrl)
gbm_performance <- getPerformance(model_seq_gbm, merged, class1varname)
stats <- data.frame(auc = gbm_performance$auc, lb = gbm_performance$lb, ub = gbm_performance$ub, n.vars = ncol(merged) - 1)
predictions <- predict(model_seq_gbm, newdata = merged, type = "prob")
phats <- predictions %>% as_tibble()
return(list(stats = stats, model_seq = model_seq_gbm, phat = phats))
}
getvarimp <- function(model_seq){
df <- varImp(model_seq, scale=FALSE, useModel = TRUE)$importance %>% mutate(var = rownames(.)) %>% as_tibble() %>% arrange(desc(Overall)) %>% dplyr::mutate(id = 1:n()) %>% mutate(s = Overall / sum(Overall)) %>% filter(s > 0) %>% mutate(s = round(s*100, 2))
df$var <- gsub("`", "", df$var)
df
}
getShap <- function(merged, class1varname, model_seq_xgb){
label.merge <- merged %>% mutate(status = ifelse(status == class1varname, 1, 0)) %>% pull(status)
fparams <- model_seq_xgb$finalModel$tuneValue %>% as_tibble()
ft_cols <- attr(model_seq_xgb$terms, "term.labels") %>% as.character() %>% gsub("`", "", .)
merged <- merged %>% select(c(ft_cols, "status"))
bst <- xgboost::xgboost(as.matrix( (merged %>% select(-status))),label.merge , nrounds = fparams$nrounds, eta = fparams$eta, max_depth = fparams$max_depth, subsample = fparams$subsample, gamma = fparams$gamma, colsample_bytree = fparams$colsample_bytree, min_child_weight = fparams$min_child_weight, objective = "binary:logistic", nthread = 2, verbose = 0)
shap.df <- xgboost::xgb.plot.shap(data = as.matrix((merged %>% mutate(status = ifelse(status == class1varname, 1, 0)) %>% select(-status))), model = bst, top_n = 90, plot=FALSE)$shap_contr %>% as_tibble() %>% mutate_all(~ abs(.)) %>% colMeans()  %>% as.data.frame()
shap.df <- shap.df %>% mutate(var = rownames(shap.df)) %>% as_tibble() %>% magrittr::set_colnames(c("mean_abs_shap", "var")) %>% arrange(desc(mean_abs_shap)) %>% mutate(id = 1:n())
return(shap.df)
}
xgb_stats <- function(merged, response, class1varname, cv.number, cv.repeats){
tg_xgb <- expand.grid(nrounds=c(50, 100, 150),
eta=c(0.1, 0.3),
gamma = c(0, 5),
max_depth = c(2, 4, 6),
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1)
ctrl <- trainControl(method="repeatedcv",
number=cv.number,
repeats=cv.repeats,
verboseIter=TRUE,
savePredictions="final",
classProbs=TRUE,
index=createMultiFolds(merged$status, cv.number, cv.repeats),
summaryFunction=twoClassSummary)
model_seq_xgb <- caret::train(status ~ .,
data=merged,
method="xgbTree",
metric="ROC",
tuneGrid=tg_xgb,
trControl=ctrl)
xgb_performance <- getPerformance(model_seq_xgb, merged, class1varname)
stats <- data.frame(auc = xgb_performance$auc, lb = xgb_performance$lb, ub = xgb_performance$ub, n.vars = ncol(merged) - 1)
return(list(stats = stats, model_seq = model_seq_xgb))
}
results <- file.path(outdir, "results.rds") %>% readRDS(.)
results_gbm <- results$results_gbm
results_xgb_shap <- results$results_xgb_shap
results_xgb_gain <- results$results_xgb_gain
varimp_store_gbm <- results$varimp_store_gbm
varimp_store_xgb_gain <- results$varimp_store_xgb_gain
varimp_store_xgb_shap <- results$varimp_store_xgb_shap
phats_gbm <- results$phats_gbm
true_names <- papervarnames_file %>% read_csv() %>% select(2,3)
varimp_store_gbm <- lapply(varimp_store_gbm, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(Overall, proper_names, id, s) %>% magrittr::set_colnames(c("Overall", "var", "id", "s")))
varimp_store_xgb_gain <- lapply(varimp_store_xgb_gain, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(Overall, proper_names, id, s) %>% magrittr::set_colnames(c("Overall", "var", "id", "s")))
varimp_store_xgb_shap <- lapply(varimp_store_xgb_shap, function(x) x %>% left_join(true_names, by=c("var"="new_names")) %>% select(-var) %>% relocate(mean_abs_shap, proper_names, id) %>% magrittr::set_colnames(c("mean_abs_shap", "var", "id")))
library(scales)
#PLOTTING
sx_varimp_plot <- function(df, method = "importance"){
cbb <- ggsci::pal_jama("default")(7)
if (length(unique(df$colstatus)) <= 1){
plt <- df %>% ggplot(aes(y=factor(id), x=s), color = "grey80", fill = "grey80") + geom_col() + theme_minimal() + theme(legend.position = "none")
} else{
plt <- df %>% ggplot(aes(y=factor(id), x=s, color=colstatus, fill = colstatus)) + geom_col() + theme_minimal() + scale_color_manual(name = "In Final Model", values = c("Yes" = cbb[1], "No" = cbb[2]), labels = c("No" = "No", "Yes" = "Yes")) + theme(legend.text = element_text(size = 12), legend.title = element_text(size = 12)) + scale_fill_manual(name = "In Final Model", values = c("Yes" = cbb[1], "No" = cbb[2]), labels = c("No" = "No", "Yes" = "Yes"))
}
if (method == "shap"){
xlabstr <- "Mean Absolute SHAP"
} else{
xlabstr <- "Percent Importance (%)"
}
plt	+ scale_y_discrete(breaks = df$id, labels = df$var) + xlab(xlabstr) + theme(panel.grid = element_blank()) + theme(panel.background  = element_blank(), panel.border = element_rect(color = "black", fill = "transparent")) +  scale_x_continuous(breaks = pretty_breaks(n = 10)) + ggtitle("") + theme(axis.title = element_text(hjust = 0.5, size = 12)) + theme(axis.text = element_text(size = 10), axis.ticks.x = element_line(color = "grey80"))
}
#relative change: >= 1.5% drop then call it
get_n_vars <- function(df){
df$diff <- c(0, diff(df$auc))
df <- df %>% mutate(percent_rel_change = (diff*100) / auc)
res <- df %>% mutate(idx = 1:n()) %>% filter(round(percent_rel_change, 4) <= -1.5) %>% mutate(nlim = ifelse(n.vars <= 20, 1, 0))
varn <- res %>% filter(nlim == 1) %>% dplyr::slice(1) %>% pull(idx)
if (identical(varn, integer(0))){
varn <- res$idx[1]
}
df$n.vars[(varn - 1)]
}
final.n.vars.gbm <- get_n_vars(results_gbm)
print(paste0("NUMBER OF FINAL VARIABLES IN GBM:::  ", final.n.vars.gbm))
final.var.imp_gbm <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% varimp_store_gbm[[.]]
### AUROC plot under construction
ftsel <- final.var.imp_gbm %>% left_join(., papervarnames_file %>% read_csv()
, by = c("var" = "proper_names")) %>% pull(new_names)
dftmp <- "lc-vi/merged.csv" %>% read_csv() %>% select(c(ftsel, "status"))
tg_gbm <- expand.grid(n.trees=c(50, 100, 150),
interaction.depth=c(2,3,4),
shrinkage=0.1,
n.minobsinnode=10)
ctrl <- trainControl(method="repeatedcv",
number=cv_number,
repeats=cv_repeat,
verboseIter=TRUE,
savePredictions="final",
classProbs=TRUE,
index=createMultiFolds(dftmp$status, cv_number, cv_repeat),
summaryFunction=twoClassSummary)
model_seq_gbm <- caret::train(status ~ .,
data=dftmp,
method="gbm",
metric="ROC",
tuneGrid=tg_gbm,
trControl=ctrl)
fit <- model_seq_gbm$pred %>%
arrange(rowIndex) %>%
group_by(rowIndex) %>%
dplyr::summarize(obs=obs[1],
prob=mean(LC)) %>%
ungroup() %>% mutate(id = rowIndex) %>%
select(id, obs, prob)
dat <- fit %>% mutate(class = ifelse(obs == "LC", 1, 0))
rocobj <- roc(dat$class, dat$prob, direction = "<", ci=TRUE)
df.roc <- data.frame(spec=(1-rocobj$specificities), sens=rocobj$sensitivities)
lb <- rocobj$ci[1]
auc <- rocobj$ci[2]
ub <- rocobj$ci[3]
lab.text <- paste0("AUC: ", auc %>% signif(2), " (", lb %>% signif(2), " - ", ub %>% signif(2) , ")")
ann.text <- data.frame(spec=0.75, sens=0.05, label=lab.text, n=length(rocobj$cases))
overall.roc <- ggplot(df.roc, aes(spec, sens)) +
geom_line(size=1, color = "black") +
scale_x_continuous(expand=c(0, 0.01),
breaks=c(0, 0.25, 0.5, 0.75, 1),
labels=as.character(
c("0", "0.25", "0.50", "0.75", "1.0"))) +
scale_y_continuous(expand=c(0, 0.01),
labels=as.character(
c("0", "0.25", "0.50", "0.75", "1.0")))  +
theme_classic(base_size=17) +
theme(panel.background=element_blank(),
panel.grid=element_blank(),
legend.position="top",          axis.line.x.bottom=element_line(color="black"),
strip.background=element_blank()) +
xlab("1 - Specificity") + ylab("Sensitivity") + geom_text(data = ann.text,label = lab.text, size=5)
gbm_roc_fig3 <- overall.roc
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
merged <- "../lc-vi-ml/lc-vi/merged.csv" %>% read_csv()
phat <- results_gbm %>% mutate(idx = 1:n()) %>% filter(n.vars == final.n.vars.gbm) %>% pull(idx) %>% phats_gbm[[.]] %>% cbind(., merged) %>% as_tibble()
calib <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% group_by(decile) %>% summarize(s = sum(status == "LC"), n = n(), llim = min(LC), ulim = max(LC)) %>% mutate(xlabel = paste0(decile, "\n", "(", round(llim, 2), " - ", round(ulim, 2), ")"))
decile_sx <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile)  %>% filter(decile %in% c(1,10)) %>% select(-c(LC, VI, status))
decile_vec <- decile_sx$decile
decile_pvals <- apply(decile_sx %>% select(-decile), 2, function(x) wilcox.test(x[decile_vec == 10], x[decile_vec==1])$p.val) %>% unlist()
vars_less_than_0.05 <- decile_pvals %>% as_tibble() %>% mutate(var = decile_sx %>% select(-decile) %>% colnames()) %>% filter(value <= 0.05)
calib_comp <- phat %>% mutate(decile  = ntile(LC, 10)) %>% relocate(decile) %>% filter(decile %in% c(1,10)) %>% group_by(decile) %>% select(-status) %>% summarise(across(everything(), mean)) %>% select(-c(LC, VI)) %>% pivot_longer(-c(decile)) %>% filter(name %in% (vars_less_than_0.05 %>% pull(var)))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", stat = "identity") + theme_minimal()
mapping_calib <- calib %>% select(decile, xlabel) %>% distinct() %>% arrange(decile)
calib_comp <- calib_comp %>% left_join(true_names, by = c("name" = "new_names")) %>% select(-name) %>% magrittr::set_colnames(c("decile", "value", "name")) %>% relocate(decile, name, value)
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(x=name, y = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + xlab("") + ylab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.x = element_text(size = 12, angle = 60, hjust = 1)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.y = element_text(size = 15), axis.text.y = element_text(size = 12), legend.text = element_text(size = 14), legend.title = element_text(size = 15)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_y_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = "right") + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 12), legend.text = element_text(size = 12), legend.title = element_text(size = 14)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = "bottom") + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 12), legend.text = element_text(size = 12), legend.title = element_text(size = 14)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = "bottom") + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 12), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.8, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 12), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.75, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 12), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.75, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 14), axis.text.y = element_text(size = 10), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.75, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 12), axis.text.y = element_text(size = 10), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.75, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 12), axis.text.y = element_text(size = 10), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_col(position = "dodge", width = 0.6) + theme_minimal() + ylab("") + xlab("Frequency of Symptom in Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10, hjust = 1)) + theme(legend.position = "bottom") + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 15), axis.text.x = element_text(size = 12), legend.text = element_text(size = 10), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st Decile\nP(LC) = 0.14 - 0.23", "10th Decile\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st Decile\nP(LC) = 0.14 - 0.23", "10th Decile\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.x = element_line(color = "black")) + guides(color = guide_legend(nrow = 2), fill = guide_legend(nrow = 2)) + theme(legend.title = element_blank())
phat_fige <- calib_comp %>% mutate(name = factor(name, levels = (calib_comp %>% group_by(name) %>% summarize(v = value[decile == 1] - value[decile == 10]) %>% arrange((v)) %>% pull(name)))) %>% ggplot(aes(y=name, x = value, color = factor(decile), fill  = factor(decile), group = factor(decile))) + geom_bar(position = "dodge", width = 0.6, stat = "identity") + theme_minimal() + ylab("") + xlab("Frequency of Symptom\nin Decile") + theme(panel.border = element_rect(color = "black", fill = "transparent"), panel.grid = element_blank()) + theme(axis.text.y = element_text(size = 10)) + theme(legend.position = c(0.75, 0.5)) + labs(color = "Decile", fill = "Decile") + theme(axis.title.x = element_text(size = 12), axis.text.y = element_text(size = 10), legend.text = element_text(size = 8), legend.title = element_text(size = 10)) + scale_fill_manual(values = c("#df8f44","#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_color_manual(values = c("#df8f44", "#374e55") %>% rev(), labels = c("1st\nP(LC) = 0.14 - 0.23", "10th\nP(LC) = 0.95 - 0.99")) + scale_x_continuous(limits = c(0,1), breaks = c(0, 0.25, 0.5, 0.75, 1)) + theme(axis.ticks.y = element_line(color = "black"))
phat_fige
ggsave(plot=phat_fige, filename="lc-vi/phat-fig-e.pdf", device = cairo_pdf, units = "in", width = 6, height = 10)
ggsave(plot=phat_fige, filename="lc-vi/phat-fig-e.pdf", device = cairo_pdf, units = "in", width = 6, height = 9)
